/*
 * This class implements the WFS Arbitrator FSM
 *
 * The core FSM is generated by FSMC based on
 * WfsFsmCore.fsm
 *
 */

#ifndef WFSFSM_H_INCLUDE
#define WFSFSM_H_INCLUDE

#include "framework/AbstractFsm.h"
#include "WfsCommandImplFactory.h"
#include "WfsFsmCore.h"

#include "arblib/base/BasicOpCodes.h"
#include "arblib/wfsArb/WfsArbitratorOpCodes.h"


using namespace Arcetri::Arbitrator;

namespace Arcetri {
namespace Wfs_Arbitrator {

class WfsFsm: public AbstractFsm, public WfsFsmCore {


   public: // METHODS

      //  Constructor
    WfsFsm(unsigned int commandHistoryMaxSize, string ident);

      //  Destructor
      virtual ~WfsFsm(){};
      bool processCommand() const;

      virtual string currentStateAsString();

   private:
      /*
       * Implement pure virtual base class methods.
       */
      void trigger(OpCode code);
      void forceFailure();
      void forcePanic();


// The following map supports the conversion between OpCodes and Events
    private:
       map<OpCode,Event> EvtTable;

};

}
}

#endif // WFSFSM_H_INCLUDE
